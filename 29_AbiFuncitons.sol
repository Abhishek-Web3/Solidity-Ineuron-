//SPDX-License-Identifier:MIT
pragma solidity ^0.8.6;

contract EncodeDecode {
    function encode(string memory _str1, uint _int, string memory _str2) public pure returns(bytes memory) {

       return  (abi.encode(_str1, _int, _str2));

    //    bytes: 0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000015900000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000b647366617364666761666700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000087364666773646667000000000000000000000000000000000000000000000000
    }

    function decode1( bytes memory _hesadecimalinputs) public pure returns (string memory _str1, uint _int, string memory _str2){
        (_str1, _int, _str2)  = abi.decode((_hesadecimalinputs), (string, uint, string));
    }
}